[tool.poetry]
name = "marl"
version = "0.1.0"
description = "Multi Agent Reinforcement Learning algorithms with the RLEnv library"
authors = ["Yannick Molinghen <yannick.molinghen@ulb.be>"]
license = "MIT"

[tool.poetry.dependencies]
python = ">=3.10, <3.13"
numpy = "^1.23.4"
# rlenv = { git = "https://github.com/yamoling/rlenv.git" }
opencv-python = "^4.7.0.68"
tqdm = "^4.65.0"
pynvml = "^11.5.0"
scipy = "^1.11.3"
psutil = "^5.9.5"
pyserde = "^0.12.3"
networkx = "^3.1"
sumtree = "^0.2.4"
typed-argparse = "^0.3.1"
polars = "^0.20.6"
protobuf = "3.20"
neptune = "^1.9.1"
python-dotenv = "^1.0.1"
# laser-learning-environment = "^0.2.0"

[tool.poetry.dependencies.lle]
git = "https://github.com/bhouart/lle.git"
branch = "test"

[tool.poetry.dependencies.rlenv]
git = "https://github.com/yamoling/rlenv.git"
branch = "main"


[tool.poetry.group.dev.dependencies]
matplotlib = "^3.6.3"
websockets = "^10.4"
flask = "^2.2.2"
flask-cors = "^3.0.10"
pytest = "^7.3.1"
pytest-xdist = "^3.4.0"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["tests"]
filterwarnings = [
    # Ignore deprecation warnings related to Pysc2 (smac)
    "ignore:Call to deprecated create function Descriptor().*:DeprecationWarning",
    "ignore:Call to deprecated create function FieldDescriptor().*:DeprecationWarning",
    "ignore:Call to deprecated create function EnumValueDescriptor().*:DeprecationWarning",
    "ignore:Call to deprecated create function EnumDescriptor().*:DeprecationWarning",
    "ignore:Call to deprecated create function FileDescriptor().*:DeprecationWarning",
]
addopts = "-n 4"


[tool.ruff]
# Check https://beta.ruff.rs/docs/rules/ for all rules
fixable = ["ALL"]

unfixable = [
    "F401", # Do not fix imports automatically (it removes unused imports in __init__.py files)
    #"F841", # Do not fix unused variables automatically
]
line-length = 140
